{
    "indent": {
        "value": "    "
    },
    "lineBreak": {
        "before": {
            "MemberExpressionClosing": 0,
            "ObjectExpressionClosingBrace": 1,

            "ArrayPatternClosing": 0,
            "ArrayPatternComma": 0,
            "ArrayPatternOpening": 0,
            "ArrowFunctionExpressionArrow": 0,
            "ArrowFunctionExpressionClosingBrace": 1,
            "ArrowFunctionExpressionOpeningBrace": 0,
            "AssignmentExpression": 1,
            "AssignmentOperator": 0,
            "AssignmentPattern": 1,
            "BlockStatementClosingBrace": 1,
            "BlockStatementOpeningBrace": 1,
            "BreakKeyword": 1,
            "CallExpression": -1,
            "CallExpressionClosingParentheses": 0,
            "CallExpressionOpeningParentheses": 0,
            "CatchClosingBrace": ">=1",
            "CatchKeyword": 0,
            "CatchOpeningBrace": 0,
            "ClassClosingBrace": ">=1",
            "ClassDeclaration": ">=1",
            "ClassExpression": ">=1",
            "ClassExtendsKeyword": 0,
            "ClassKeyword": -1,
            "ClassOpeningBrace": 0,
            "ConditionalExpression": ">=1",
            "DeleteOperator": ">=1",
            "DoWhileStatement": ">=1",
            "DoWhileStatementClosingBrace": ">=1",
            "DoWhileStatementOpeningBrace": 0,
            "ElseIfStatement": 0,
            "ElseIfStatementClosingBrace": 1,
            "ElseIfStatementOpeningBrace": 0,
            "ElseStatement": 0,
            "ElseStatementClosingBrace": 1,
            "ElseStatementOpeningBrace": 0,
            "EmptyStatement": 0,
            "EndOfFile": 1,
            "ExportAllDeclaration": ">=1",
            "ExportDefaultDeclaration": ">=1",
            "ExportNamedDeclaration": ">=1",
            "FinallyClosingBrace": ">=1",
            "FinallyKeyword": -1,
            "FinallyOpeningBrace": 0,
            "ForInStatement": ">=1",
            "ForInStatementClosingBrace": ">=1",
            "ForInStatementExpressionClosing": 0,
            "ForInStatementExpressionOpening": 0,
            "ForInStatementOpeningBrace": 0,
            "ForOfStatement": ">=1",
            "ForOfStatementClosingBrace": ">=1",
            "ForOfStatementExpressionClosing": 0,
            "ForOfStatementExpressionOpening": 0,
            "ForOfStatementOpeningBrace": 0,
            "ForStatement": ">=1",
            "ForStatementClosingBrace": ">=1",
            "ForStatementExpressionClosing": "<2",
            "ForStatementExpressionOpening": 0,
            "ForStatementOpeningBrace": 0,
            "FunctionDeclaration": 1,
            "FunctionDeclarationClosingBrace": 1,
            "FunctionDeclarationOpeningBrace": 0,
            "FunctionExpression": 0,
            "FunctionExpressionClosingBrace": 1,
            "FunctionExpressionOpeningBrace": 0,
            "IIFEClosingParentheses": 0,
            "IfStatement": 1,
            "IfStatementClosingBrace": 1,
            "IfStatementOpeningBrace": 0,
            "LogicalExpression": -1,
            "MemberExpressionOpening": 0,
            "MemberExpressionPeriod": 0,
            "MethodDefinition": 1,
            "MethodDefinitionClosingBrace": 1,
            "MethodDefinitionOpeningBrace": 0,
            "ModuleSpecifierClosingBrace": 0,
            "ModuleSpecifierComma": 0,
            "ModuleSpecifierOpeningBrace": 0,
            "ObjectPatternClosingBrace": 0,
            "ObjectPatternComma": 0,
            "ObjectPatternOpeningBrace": 0,
            "Property": 1,
            "PropertyValue": 0,
            "ReturnStatement": -1,
            "SwitchCaseBlockEnd": ">=1",
            "SwitchCaseBlockStart": 0,
            "SwitchCaseColon": 0,
            "SwitchClosingBrace": ">=1",
            "SwitchOpeningBrace": 0,
            "ThisExpression": "<=1",
            "ThrowStatement": ">=1",
            "TryClosingBrace": ">=1",
            "TryKeyword": -1,
            "TryOpeningBrace": 0,
            "VariableDeclaration": 0,
            "VariableDeclarationSemiColon": 0,
            "VariableDeclarationWithoutInit": "<=1",
            "VariableName": 0,
            "VariableValue": 0,
            "WhileStatement": ">=1",
            "WhileStatementClosingBrace": ">=1",
            "WhileStatementOpeningBrace": 0
        },
        "after": {
            "MemberExpressionClosing": 0,
            "ObjectExpressionOpeningBrace": 1,

            "ArgumentComma": 1,
            "ArgumentList": 0,
            "ArrayExpressionClosing": 0,
            "ArrayExpressionComma": 1,
            "ArrayExpressionOpening": 0,
            "ArrayPatternClosing": 1,
            "ArrayPatternComma": 1,
            "ArrayPatternOpening": 0,
            "ArrowFunctionExpressionArrow": 0,
            "ArrowFunctionExpressionClosingBrace": 0,
            "ArrowFunctionExpressionOpeningBrace": 1,
            "AssignmentOperator": 0,
            "AssignmentPattern": 1,
            "BinaryExpression": 0,
            "BinaryExpressionOperator": 1,
            "BlockComment": 1,
            "BlockStatementClosingBrace": 1,
            "BlockStatementOpeningBrace": 1,
            "CallExpression": -1,
            "CallExpressionClosingParentheses": -1,
            "CallExpressionOpeningParentheses": -1,
            "CatchClosingBrace": 1,
            "CatchKeyword": 1,
            "CatchOpeningBrace": 1,
            "CatchParameterList": 0,
            "ClassClosingBrace": 1,
            "ClassOpeningBrace": 1,
            "CommaOperator": 1,
            "ConditionalExpressionConsequent": 1,
            "ConditionalExpressionTest": 1,
            "DoWhileStatementBody": 1,
            "DoWhileStatementClosingBrace": 1,
            "DoWhileStatementOpeningBrace": 1,
            "ElseIfStatementClosingBrace": 1,
            "ElseIfStatementOpeningBrace": 1,
            "ElseStatementClosingBrace": 1,
            "ElseStatementOpeningBrace": 1,
            "EmptyStatement": 0,
            "ExpressionOpeningParentheses": 0,
            "FinallyClosingBrace": 1,
            "FinallyKeyword": -1,
            "FinallyOpeningBrace": 1,
            "ForInStatement": 1,
            "ForInStatementClosingBrace": 1,
            "ForInStatementExpressionClosing": 1,
            "ForInStatementExpressionOpening": 0,
            "ForInStatementOpeningBrace": 1,
            "ForOfStatement": 1,
            "ForOfStatementClosingBrace": 1,
            "ForOfStatementExpressionClosing": 1,
            "ForOfStatementExpressionOpening": 0,
            "ForOfStatementOpeningBrace": 1,
            "ForStatement": 1,
            "ForStatementClosingBrace": 1,
            "ForStatementExpressionClosing": 1,
            "ForStatementExpressionOpening": 0,
            "ForStatementOpeningBrace": 1,
            "ForStatementSemicolon": 1,
            "FunctionDeclarationClosingBrace": 1,
            "FunctionDeclarationOpeningBrace": 1,
            "FunctionExpressionClosingBrace": 0,
            "FunctionExpressionOpeningBrace": 1,
            "FunctionName": 0,
            "FunctionReservedWord": 0,
            "IIFEOpeningParentheses": 0,
            "IfStatementClosingBrace": 1,
            "IfStatementConditionalClosing": 1,
            "IfStatementConditionalOpening": 0,
            "IfStatementOpeningBrace": 1,
            "LogicalExpressionOperator": 1,
            "MemberExpressionOpening": 0,
            "MemberExpressionPeriod": 0,
            "MethodDefinitionName": 0,
            "MethodName": 0,
            "ModuleSpecifierClosingBrace": 0,
            "ModuleSpecifierComma": 1,
            "ModuleSpecifierOpeningBrace": 1,
            "ObjectPatternClosingBrace": 1,
            "ObjectPatternComma": 1,
            "ObjectPatternOpeningBrace": 0,
            "ParameterComma": 1,
            "ParameterList": 0,
            "PropertyName": 0,
            "PropertyValue": 0,
            "SwitchDiscriminantClosing": 1,
            "SwitchDiscriminantOpening": 0,
            "ThrowKeyword": 1,
            "TryClosingBrace": 1,
            "TryKeyword": -1,
            "TryOpeningBrace": 1,
            "UnaryExpressionOperator": 0,
            "UpdateExpressionOperator": 0,
            "VariableDeclarationSemiColon": 1,
            "VariableName": 0,
            "VariableValue": 0,
            "WhileStatementClosingBrace": 1,
            "WhileStatementConditionalClosing": 1,
            "WhileStatementConditionalOpening": 0,
            "WhileStatementOpeningBrace": 1
        }
    }
}